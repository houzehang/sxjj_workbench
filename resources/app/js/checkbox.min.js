/**
* 功能说明:		复选框/单选框的全选反选以及文字点击控制的插件
* @author:		vivy <lizhiziyan@qq.com>
* @time:		2016-08-22 11:15:30
* @version:		V1.1.0
* @js调用方法[复选框]：
* $("#id").selectCheck({
* 	parentSelect:"p",//支持文字也选中的标签，例子中时P标签，根据具体情况换成li,div等。不需要要控制时设为null
* 	allId: 'checkAll',//全选反选input的ID,如果不需要全选反选，则设置为nul
* 	toggleClass: 'check_span--checked',//改变的样式名，针对例子中的复选框样式美化
* 	checkCallBack:function(obj,bool){}//选择之后回调函数,返回obj的是否选中
* })
* @js调用方法[单选框]：
* $("#id").selectRadio({
* 	parentSelect:"p",//支持文字也选中的标签，例子中时P标签，根据具体情况换成li,div等。不需要要控制时设为null
* 	toggleClass: 'radio_span--checked'//改变的样式名，针对例子中的复选框样式美化
* })
*
*/
var _fs = require('fs');
var _utils = require('./js/utils.js');
var root_path = '';
var sublime_root_path = '';
var basecfg_path = '\\src\\gameconfig\\BaseConfig.js';
var logutil_path = '\\src\\fbcore\\utils\\LogUtils_JS.js';
var simulator_path = '\\frameworks\\runtime-src\\Classes\\AppDelegate.cpp';

function onSave(_root_path,errorBack){
  var _fs = require('fs');
  // var _root_path = document.getElementById('root_path').value;    
  if (/\\sxjj$/.test(_root_path) && /:\\/.test(_root_path)) {
    _fs.exists(_root_path+`\\frameworks\\runtime-src\\proj.win32`, function(exists) {  
      if (exists) {
        _fs.writeFile('./root_path.info',_root_path,function(err){
            if(err){
              alert("保存失败");
            }else{
              root_path = _root_path;
              $("#input_root").val(root_path);
              // alert("保存成功");
              // window.close();
            }
        });
      }else{
        if (confirm("请设置正确的项目根目录")) {
            errorBack && errorBack();
        }
      }
    });
  }else{
    if (confirm("请设置正确的项目根目录")) {
        errorBack && errorBack();
    }
  }
};

function onSave_SublimeTextRootPath(_root_path,errorBack){
  var _fs = require('fs');
  if (/ublime/.test(_root_path)) {
    _fs.exists(_root_path+`\\Data\\Packages\\User`, function(exists) {  
      if (exists) {
        _fs.writeFile('./sublime_root_path.info',_root_path,function(err){
            if(err){
              alert("保存失败");
            }else{
              sublime_root_path = _root_path;
              $("#input_root_sublime").val(sublime_root_path);
              // alert("保存成功");
              // window.close();
            }
        });
      }else{
        if (confirm("请设置正确的Sublime Text根目录")) {
            errorBack && errorBack();
        }
      }
    });
  }else{
    if (confirm("请设置正确的Sublime Text根目录")) {
        errorBack && errorBack();
    }
  }
}

function __checkCheckboxClicked_Tutorial(){
  _fs.readFile(root_path+basecfg_path,'utf8',function(err, data){
    !err && data.split('\n').map(function(line,index){
        /m_isWithoutTutorial:/.test(line) && /true/.test(line) && document.getElementById('checkbox_1').click();
    });
  });
};

function __checkCheckboxClicked_Log(){
  _fs.readFile(root_path+logutil_path,'utf8',function(err, data){
    !err && data.split('\n').map(function(line,index){
        /log_flag:/.test(line) && /false/.test(line) && document.getElementById('checkbox_2').click();
    });
  });
};

function __checkCheckboxClicked_NomalSize(){
  _fs.readFile(root_path+simulator_path,'utf8',function(err, data){
    !err && data.split('\n').map(function(line,index){
        /1334/.test(line) && /750/.test(line) && document.getElementById('checkbox_3').click();
    });
  });
};

_fs.readFile('./root_path.info', 'utf8', function(err, data){
  if (err) {
    root_path = '';
  }else{
    // document.getElementById('root_path').value = data;
    root_path = data;
    $("#input_root").val(root_path);
    __checkCheckboxClicked_Tutorial();
    __checkCheckboxClicked_Log();
    __checkCheckboxClicked_NomalSize();
  }
});


_fs.readFile('./sublime_root_path.info', 'utf8', function(err, data){
  if (err) {
    input_root_sublime = '';
  }else{
    // document.getElementById('root_path').value = data;
    input_root_sublime = data;
    $("#input_root_sublime").val(input_root_sublime);
  }
});


(function($) {
    $.fn.extend({
        selectCheck: function(f) {
            var g = {
                parentSelect: "p",
                allId: 'checkAll',
                toggleClass: 'check_span--checked',
                checkCallBack: function(a, b) {}
            };
            var f = $.extend(g, f);

            function checkAll(a, b, c, d) {
                if (!root_path || root_path.length == 0) {
                    alert('请设置正确的项目根目录');
                    // setTimeout(function(){
                    //     window.open('./extends/electron_form.html');
                    // },200);
                    checkbox.checked=false;
                    return;
                }

                var o = f;
                var e = $("#" + o.allId);
                if (o.checkCallBack && $.isFunction(o.checkCallBack)) {
                    o.checkCallBack.call(this, d, c)
                }

                if (b.attr("id") == o.allId) {
                    if (c) {

                        a.prop("checked", true);
                        a.parent().addClass(o.toggleClass);
                        b.prop("checked", true)
                    } else {

                        a.removeAttr("checked");
                        a.parent().removeClass(o.toggleClass);
                        b.removeAttr("checked")
                    }
                } else {
                    if (!c) {


                        //取消选中

                        if (/1$/.test(b.attr("id"))) {
                          _utils.replaceOneLine(root_path+basecfg_path,'m_isWithoutTutorial:','    m_isWithoutTutorial:false,//====== 新手引导是否隐藏 ======',function(err){
                            err && alert(err);
                          });
                        }else if (/2$/.test(b.attr("id"))){
                          _utils.replaceOneLine(root_path+logutil_path,'log_flag:','    log_flag:true,      ////普通log开关',function(err){
                            err && alert(err);
                          });
                        }else if (/3$/.test(b.attr("id"))) {
                          _utils.replaceOneLine(root_path+simulator_path,'createWithRect','        glview = cocos2d::GLViewImpl::createWithRect("FireBirdJS", Rect(0,0,2048,1920), 0.5);',function(err){
                            err && alert(err);
                          });
                        }

                        b.removeAttr("checked");
                        b.parent().removeClass(o.toggleClass);
                        e.parent().removeClass(o.toggleClass);
                        e.removeAttr("checked")
                    } else {


                        //被选中
                        if (/1$/.test(b.attr("id"))) {
                          _utils.replaceOneLine(root_path+basecfg_path,'m_isWithoutTutorial:','    m_isWithoutTutorial:true,//====== 新手引导是否隐藏 ======',function(err){
                            err && alert(err);
                          });
                        }else if (/2$/.test(b.attr("id"))){
                          _utils.replaceOneLine(root_path+logutil_path,'log_flag:','    log_flag:false,      ////普通log开关',function(err){
                            err && alert(err);
                          });
                        }else if (/3$/.test(b.attr("id"))) {
                          _utils.replaceOneLine(root_path+simulator_path,'createWithRect','        glview = cocos2d::GLViewImpl::createWithRect("FireBirdJS", Rect(0,0,750,1334), 0.5);',function(err){
                            err && alert(err);
                          });
                        }

                        b.prop("checked", true);
                        b.parent().addClass(o.toggleClass);
                        for (var i = 0; i < a.length; i++) {
                            if (a[i].checked == false && a[i].id != o.allId) return
                        }
                        e.parent().addClass(o.toggleClass);
                        e.prop("checked", true)
                    }
                }
            }
            return this.each(function() {
                var o = f;
                var b = $(this);
                var c = this;
                var d = $('input:checkbox', b);
                if (o.parentSelect) {
                    d.parents(o.parentSelect).click(function(e) {
                        if (o.allId) {
                            var a = $(this).find("input:checkbox");
                            if ($(e.target).attr("type") == "checkbox") checkAll(d, $(e.target), e.target.checked, b);
                            else checkAll(d, a, !a.is(":checked"), b)
                        } else {
                            if ($(e.target).attr("type") == "checkbox") {
                                $(e.target).parent().toggleClass(o.toggleClass);
                                if (o.checkCallBack && $.isFunction(o.checkCallBack)) {
                                    o.checkCallBack.call(c, b, e.target.checked)
                                }
                            } else {
                                $('input:checkbox', $(this)).parent().toggleClass(o.toggleClass);
                                if (o.checkCallBack && $.isFunction(o.checkCallBack)) {
                                    o.checkCallBack.call(c, b, $('input:checkbox', $(this)).is(":checked"))
                                }
                            }
                        }
                    });
                    return
                }
                d.click(function() {
                    if (o.allId) {
                        checkAll(d, $(this), this.checked.obj)
                    } else {
                        $(this).parent().toggleClass(o.toggleClass);
                        if (o.checkCallBack && $.isFunction(o.checkCallBack)) {
                            o.checkCallBack.call(c, b, this.checked)
                        }
                    }
                })
            })
        },
        selectRadio: function(c) {
            var d = {
                parentSelect: "p",
                toggleClass: 'radio_span--checked'
            };
            var c = $.extend(d, c);
            return this.each(function() {
                var o = c;
                var a = $(this);
                var b = $('input:radio', a);
                if (o.parentSelect) {
                    b.parents(o.parentSelect).click(function(e) {
                        b.parent().removeClass(o.toggleClass);
                        if ($(e.target).attr("type") == "radio") $(e.target).parent().addClass(o.toggleClass);
                        else $("input:radio", $(this)).parent().addClass(o.toggleClass)
                    });
                    return
                }
                b.click(function() {
                    b.parent().removeClass(o.toggleClass);
                    $(this).parent().addClass(o.toggleClass)
                })
            })
        }
    })

    $("#button_select").click(function(){
        // alert($("#input_root").value);
        var selectRootPath = function(){
            var temp_root_path =  dialog.showOpenDialog({
                "title":"请选择项目根目录（选择sxjj文件夹）",
                "properties":["openDirectory"]
            });
            // alert(temp_root_path);
            temp_root_path && temp_root_path.length >0 && onSave(temp_root_path,function(){
                selectRootPath();
            });
        };
        selectRootPath();

    });
    $("#button_select_sublime").click(function(){
        // alert($("#input_root").value);
        // 
        var selectSublimeRootPath = function(){
            var temp_root_path =  dialog.showOpenDialog({
                "title":"请选择Sublime Text项目根目录（选择Sublime Text2/3文件夹）",
                "properties":["openDirectory"]
            });
            // alert(temp_root_path);
            temp_root_path && temp_root_path.length >0 && onSave_SublimeTextRootPath(temp_root_path,function(){
                selectSublimeRootPath();
            });
        };
        selectSublimeRootPath();

    });


    $("#button_snippet").click(function(){
        var content = $('#text').val();
        var trigger = $('#input_snippet').val();

        if (!content || !content.length) {
            alert("自动补全内容不可为空");
            return;
        }
        if (!trigger || !trigger.length) {
            alert("缩写快捷短语不可为空");
            return;   
        }

        var sublime_root_path = $("#input_root_sublime").val()+'\\Data\\Packages\\User\\'
        var content = content
        var trigger = trigger
        var fname   = trigger

        var fs = require("fs");
        var model = `<snippet>
            <content><![CDATA[`+content+
        `]]></content>
            <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
            <tabTrigger>`+trigger+`</tabTrigger>
            <!-- Optional: Set a scope to limit where the snippet will trigger -->
            <!-- <scope>source.python</scope> -->
        </snippet>
        `
        fs.writeFileSync(sublime_root_path+fname+`.sublime-snippet`,model);

        $('#text').val('')
        $('#input_snippet').val('')

        alert('自动补全代码添加成功！\n在Sublime Text编辑器中试试输入 '+'"'+trigger+'" 吧');
    });

    $("#clearalltext").click(function(){
        $('#text').val('')
        $('#input_snippet').val('')
    });

    $("#usetemplate").click(function(){
        $('#text').val(`for(var i = 0; i \< \${1:10}; i++){
    console.log('Hello '+\${2:'World'});
}`)
        $('#input_snippet').val('fori')
    });

})(jQuery);







